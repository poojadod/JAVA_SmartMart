/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DeliveryManRole;

import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Orders.HotelDirectory;
import Business.Orders.OrderDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Pragna 
 */
public class DeliveryStatus extends javax.swing.JPanel {
    JPanel userProcessContainer;
    OrderDirectory orderDirectory;
    EcoSystem ecosystem;
    DeliveryMan deliveryMan;
    Customer cust;
    HotelDirectory hotelDirectory;
    UserAccount userAccount;
    /**
     * Creates new form DeliveryStatus
     */
    public DeliveryStatus(JPanel userProcessContainer, EcoSystem ecosystem, OrderDirectory orderDirectory, HotelDirectory hotelDirectory, DeliveryMan deliveryMan, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.orderDirectory = orderDirectory;
        this.ecosystem = ecosystem;
        this.deliveryMan = deliveryMan;
        this.hotelDirectory = hotelDirectory;
        this.userAccount = userAccount;
        title.setText(deliveryMan.getName());
    }
    
    public Customer findCustomer() {
        for (int i = 0; i < ecosystem.getCustomerDirectory().getCustomerList().size(); i++) {
            if (orderDirectory != null && ecosystem.getCustomerDirectory().getCustomerList().get(i).getAccountDetails().getUsername().equals(orderDirectory.getCustomerDetails().getUsername())) {
                return ecosystem.getCustomerDirectory().getCustomerList().get(i);
            }else if(hotelDirectory != null && ecosystem.getCustomerDirectory().getCustomerList().get(i).getAccountDetails().getUsername().equals(hotelDirectory.getCustomerDetails().getUsername())) {
                return ecosystem.getCustomerDirectory().getCustomerList().get(i);
            }
        }
        return null;
    }
    
    public void setCustomerStatus(String status) {
        Customer cust = findCustomer();
            if(orderDirectory != null){
                for (int i = 0; i < cust.getOrderDirectoryList().size(); i++) {
                    if (cust.getOrderDirectoryList().get(i).getId() == (orderDirectory.getId())) {
                        cust.getOrderDirectoryList().get(i).setStatus(status);
                    }
                }
            }else{
                for (int i = 0; i < cust.getOrderDirectoryList().size(); i++) {
                    if (cust.getHotelorderDirectoryList().get(i).getId() == (hotelDirectory.getId())) {
                        cust.getHotelorderDirectoryList().get(i).setStatus(status);
                    }
                }
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        statusCombo = new javax.swing.JComboBox<>();
        SubmitButton = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        title = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(72, 72, 72));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Set Delivery Status");

        statusCombo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        statusCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Picked Up", "In transit", "Delivered" }));
        statusCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusComboActionPerformed(evt);
            }
        });

        SubmitButton.setBackground(new java.awt.Color(255, 153, 51));
        SubmitButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SubmitButton.setForeground(new java.awt.Color(255, 255, 255));
        SubmitButton.setText("Submit");
        SubmitButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 83, 170));
        btnBack.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        title.setBackground(new java.awt.Color(255, 51, 0));
        title.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(0, 83, 170));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                        .addGap(258, 258, 258))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(SubmitButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(statusCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, 228, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(btnBack)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(SubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(330, 330, 330))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {SubmitButton, btnBack});

    }// </editor-fold>//GEN-END:initComponents

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        // TODO add your handling code here:
        String item = "";
        if (statusCombo.getSelectedIndex() >= 0) {
            item = String.valueOf(statusCombo.getSelectedItem());
            if(orderDirectory != null) {
                orderDirectory.setStatus(item);
                System.out.println("before grocery" + deliveryMan.getOrderList().size());
            }else{
             hotelDirectory.setStatus(item);   
             System.out.println("before hotel" + deliveryMan.getOrderLists().size());
            }
            setCustomerStatus(item);
            if (item == "Delivered") {
                System.out.println("Inside if");
               
                for(int i = 0; i < ecosystem.getDeliveryManDirectory().getDeliverymanList().size(); i ++) {
                    System.out.println("Inside for");
                    if (deliveryMan.getName() == ecosystem.getDeliveryManDirectory().getDeliverymanList().get(i).getName()) {
                        ecosystem.getDeliveryManDirectory().getDeliverymanList().get(i).setAvailable(true);
                        System.out.println("Print"+ecosystem.getDeliveryManDirectory().getDeliverymanList().get(i).isAvailable()+"_"+ecosystem.getDeliveryManDirectory().getDeliverymanList().get(i).getName());
                        
                        JOptionPane.showMessageDialog(this, "Order changed to delivered");
                        return;
                    }
                }
            }
            JOptionPane.showMessageDialog(null,"Order status changed"); 
        }
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        DeliveryManWorkAreaJPanel dm= new DeliveryManWorkAreaJPanel(userProcessContainer, userAccount, ecosystem);
        userProcessContainer.add("manageNetworkJPanel",dm);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void statusComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SubmitButton;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox<String> statusCombo;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
